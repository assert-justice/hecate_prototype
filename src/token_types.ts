
export type TokenType = 'BACKTICK' | 'TILDE' | 'BANG' | 'PERCENT' | 'CARROT' | 'AMPERSAND' | 'ASTERISK' | 'LEFT-PAREN' | 'RIGHT-PAREN' | 'NEGATIVE' | 'UNDERSCORE' | 'EQUAL' | 'PLUS' | 'LEFT-BRACKET' | 'RIGHT-BRACKET' | 'LEFT-BRACE' | 'RIGHT-BRACE' | 'BACKSLASH' | 'PIPE' | 'SEMICOLON' | 'COLON' | 'A' | 'QUOTE' | 'COMMA' | 'PERIOD' | 'LESS' | 'GREATER' | 'SLASH' | 'QUESTION' | 'EQUAL_EQUAL' | 'LESS_EQUAL' | 'GREATER_EQUAL' | 'BANG_EQUAL' | 'COLON_COLON' | 'ARROW' | 'ELVIS' | 'WALRUS' | 'AMPERSAND_AMPERSAND' | 'PIPE_PIPE' | 'CHARACTER_LIT' | 'NUMBER_LIT' | 'IDENTIFIER' | 'STRING_LIT' | 'DOCSTRING_LIT' | 'BOOLEAN_LIT' | 'NONE' | 'IF' | 'ELIF' | 'ELSE' | 'RETURN' | 'INT' | 'FLOAT' | 'BOOL' | 'STRING';
export const ops = new Map([['`', 'BACKTICK'],['~', 'TILDE'],['!', 'BANG'],['%', 'PERCENT'],['^', 'CARROT'],['&', 'AMPERSAND'],['*', 'ASTERISK'],['(', 'LEFT-PAREN'],[')', 'RIGHT-PAREN'],['-', 'NEGATIVE'],['_', 'UNDERSCORE'],['=', 'EQUAL'],['+', 'PLUS'],['[', 'LEFT-BRACKET'],[']', 'RIGHT-BRACKET'],['{', 'LEFT-BRACE'],['}', 'RIGHT-BRACE'],['\\', 'BACKSLASH'],['|', 'PIPE'],[';', 'SEMICOLON'],[':', 'COLON'],['\'', 'A'],['"', 'QUOTE'],[',', 'COMMA'],['.', 'PERIOD'],['<', 'LESS'],['>', 'GREATER'],['/', 'SLASH'],['?', 'QUESTION'],['==', 'EQUAL_EQUAL'],['<=', 'LESS_EQUAL'],['>=', 'GREATER_EQUAL'],['!=', 'BANG_EQUAL'],['::', 'COLON_COLON'],['=>', 'ARROW'],[':?', 'ELVIS'],[':=', 'WALRUS'],['&&', 'AMPERSAND_AMPERSAND'],['||', 'PIPE_PIPE']]);
export const keywords = new Map([['none', 'NONE'],['if', 'IF'],['elif', 'ELIF'],['else', 'ELSE'],['return', 'RETURN'],['int', 'INT'],['float', 'FLOAT'],['bool', 'BOOL'],['string', 'STRING']]);
